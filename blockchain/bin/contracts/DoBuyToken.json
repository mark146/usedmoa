{
    "contractName": "DoBuyToken",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "INITIAL_SUPPLY",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "_decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "_symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "_token",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "user_wallet",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user_wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"INITIAL_SUPPLY()\":{\"notice\":\"\\ud1a0\\ud070 \\ubc1c\\ud589 \\uac1c\\uc218\"},\"_decimals()\":{\"notice\":\"\\uc2ed\\uc9c4\\ubc95\"},\"_symbol()\":{\"notice\":\"\\ud1a0\\ud070 \\uae30\\ud638\"},\"_token()\":{\"notice\":\"\\ud1a0\\ud070 \\uc774\\ub984\"},\"user_wallet()\":{\"notice\":\"\\uc720\\uc800 \\uc9c0\\uac11\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/mark146/Documents/hardHat/contracts/UsedMoaToken.sol\":\"DoBuyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/mark146/Documents/hardHat/contracts/UsedMoaToken.sol\":{\"keccak256\":\"0x2c9d31244877ff51dc360abef4b1be38555d0c73c5ed167110c7c38d2891c927\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0f50a1a5dcf449a54cab8ce1722c4610d61a7ea852626ef0bd87ca24b3e82d\",\"dweb:/ipfs/QmeRaoMoqVCuxGJaMHiLiarPD4SjgQLi1gd3DLKGbQ3B2w\"]},\"c:/Users/mark146/Documents/hardHat/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"c:/Users/mark146/Documents/hardHat/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"c:/Users/mark146/Documents/hardHat/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"c:/Users/mark146/Documents/hardHat/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
    "bytecode": "6080604052600580546001600160a01b031916331790553480156200002357600080fd5b506040518060400160405280600a8152602001692237a13abcaa37b5b2b760b11b8152506040518060400160405280600381526020016211109560ea1b81525081600390805190602001906200007b929190620001af565b50805162000091906004906020840190620001af565b50339150620000c0905081620000aa6012600a620002b9565b620000ba906305f5e10062000384565b620000c7565b50620003f9565b6001600160a01b038216620001225760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000136919062000255565b90915550506001600160a01b038216600090815260208190526040812080548392906200016590849062000255565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001bd90620003a6565b90600052602060002090601f016020900481019282620001e157600085556200022c565b82601f10620001fc57805160ff19168380011785556200022c565b828001600101855582156200022c579182015b828111156200022c5782518255916020019190600101906200020f565b506200023a9291506200023e565b5090565b5b808211156200023a57600081556001016200023f565b600082198211156200026b576200026b620003e3565b500190565b600181815b80851115620002b1578160001904821115620002955762000295620003e3565b80851615620002a357918102915b93841c939080029062000275565b509250929050565b6000620002c78383620002ce565b9392505050565b600082620002df575060016200037e565b81620002ee575060006200037e565b8160018114620003075760028114620003125762000332565b60019150506200037e565b60ff841115620003265762000326620003e3565b50506001821b6200037e565b5060208310610133831016604e8410600b841016171562000357575081810a6200037e565b62000363838362000270565b80600019048211156200037a576200037a620003e3565b0290505b92915050565b6000816000190483118215151615620003a157620003a1620003e3565b500290565b600181811c90821680620003bb57607f821691505b60208210811415620003dd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6109aa80620004096000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b09f126611610066578063b09f1266146101fd578063c0efbd2a1461021f578063dd62ed3e1461024a578063ecd0c0c31461028357600080fd5b806370a08231146101a657806395d89b41146101cf578063a457c2d7146101d7578063a9059cbb146101ea57600080fd5b80632ff2e9dc116100d35780632ff2e9dc1461016b578063313ce5671461017657806332424aa31461018b578063395093511461019357600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102ac565b60405161011a91906108be565b60405180910390f35b610136610131366004610894565b61033e565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610858565b610354565b61014a6305f5e10081565b60125b60405160ff909116815260200161011a565b610179601281565b6101366101a1366004610894565b610403565b61014a6101b4366004610803565b6001600160a01b031660009081526020819052604090205490565b61010d61043f565b6101366101e5366004610894565b61044e565b6101366101f8366004610894565b6104e7565b61010d6040518060400160405280600381526020016211109560ea1b81525081565b600554610232906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61014a610258366004610825565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61010d6040518060400160405280600a8152602001692237a13abcaa37b5b2b760b11b81525081565b6060600380546102bb90610939565b80601f01602080910402602001604051908101604052809291908181526020018280546102e790610939565b80156103345780601f1061030957610100808354040283529160200191610334565b820191906000526020600020905b81548152906001019060200180831161031757829003601f168201915b5050505050905090565b600061034b3384846104f4565b50600192915050565b6000610361848484610618565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103eb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103f885338584036104f4565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161034b91859061043a908690610913565b6104f4565b6060600480546102bb90610939565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104d05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e2565b6104dd33858584036104f4565b5060019392505050565b600061034b338484610618565b6001600160a01b0383166105565760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e2565b6001600160a01b0382166105b75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661067c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e2565b6001600160a01b0382166106de5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e2565b6001600160a01b038316600090815260208190526040902054818110156107565760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e2565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061078d908490610913565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d991815260200190565b60405180910390a350505050565b80356001600160a01b03811681146107fe57600080fd5b919050565b60006020828403121561081557600080fd5b61081e826107e7565b9392505050565b6000806040838503121561083857600080fd5b610841836107e7565b915061084f602084016107e7565b90509250929050565b60008060006060848603121561086d57600080fd5b610876846107e7565b9250610884602085016107e7565b9150604084013590509250925092565b600080604083850312156108a757600080fd5b6108b0836107e7565b946020939093013593505050565b600060208083528351808285015260005b818110156108eb578581018301518582016040015282016108cf565b818111156108fd576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561093457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061094d57607f821691505b6020821081141561096e57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204c2b1314a27356e5ed7e339045b02bb4fc7ad99ffdcff7bbc85f716a290b59b764736f6c63430008070033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b09f126611610066578063b09f1266146101fd578063c0efbd2a1461021f578063dd62ed3e1461024a578063ecd0c0c31461028357600080fd5b806370a08231146101a657806395d89b41146101cf578063a457c2d7146101d7578063a9059cbb146101ea57600080fd5b80632ff2e9dc116100d35780632ff2e9dc1461016b578063313ce5671461017657806332424aa31461018b578063395093511461019357600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102ac565b60405161011a91906108be565b60405180910390f35b610136610131366004610894565b61033e565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610858565b610354565b61014a6305f5e10081565b60125b60405160ff909116815260200161011a565b610179601281565b6101366101a1366004610894565b610403565b61014a6101b4366004610803565b6001600160a01b031660009081526020819052604090205490565b61010d61043f565b6101366101e5366004610894565b61044e565b6101366101f8366004610894565b6104e7565b61010d6040518060400160405280600381526020016211109560ea1b81525081565b600554610232906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61014a610258366004610825565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61010d6040518060400160405280600a8152602001692237a13abcaa37b5b2b760b11b81525081565b6060600380546102bb90610939565b80601f01602080910402602001604051908101604052809291908181526020018280546102e790610939565b80156103345780601f1061030957610100808354040283529160200191610334565b820191906000526020600020905b81548152906001019060200180831161031757829003601f168201915b5050505050905090565b600061034b3384846104f4565b50600192915050565b6000610361848484610618565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103eb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103f885338584036104f4565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161034b91859061043a908690610913565b6104f4565b6060600480546102bb90610939565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104d05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e2565b6104dd33858584036104f4565b5060019392505050565b600061034b338484610618565b6001600160a01b0383166105565760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e2565b6001600160a01b0382166105b75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661067c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e2565b6001600160a01b0382166106de5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e2565b6001600160a01b038316600090815260208190526040902054818110156107565760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e2565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061078d908490610913565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d991815260200190565b60405180910390a350505050565b80356001600160a01b03811681146107fe57600080fd5b919050565b60006020828403121561081557600080fd5b61081e826107e7565b9392505050565b6000806040838503121561083857600080fd5b610841836107e7565b915061084f602084016107e7565b90509250929050565b60008060006060848603121561086d57600080fd5b610876846107e7565b9250610884602085016107e7565b9150604084013590509250925092565b600080604083850312156108a757600080fd5b6108b0836107e7565b946020939093013593505050565b600060208083528351808285015260005b818110156108eb578581018301518582016040015282016108cf565b818111156108fd576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561093457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061094d57607f821691505b6020821081141561096e57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204c2b1314a27356e5ed7e339045b02bb4fc7ad99ffdcff7bbc85f716a290b59b764736f6c63430008070033",
    "sourceMap": "176:618:0:-:0;;;580:48;;;-1:-1:-1;;;;;;580:48:0;617:10;580:48;;;637:154;;;;;;;;;;1896:113:1;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;1970:5;1962;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1985:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;706:10:0::1;::::0;-1:-1:-1;727:56:0::1;::::0;-1:-1:-1;706:10:0;758:24:::1;3093:2:1::0;758::0::1;:24;:::i;:::-;741:41;::::0;527:9:::1;741:41;:::i;:::-;727:5;:56::i;:::-;678:113;176:618:::0;;8244:389:1;-1:-1:-1;;;;;8327:21:1;;8319:65;;;;-1:-1:-1;;;8319:65:1;;216:2:5;8319:65:1;;;198:21:5;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8319:65:1;;;;;;;;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:1;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:1;;520:25:5;;;-1:-1:-1;;;;;8530:37:1;;;8547:1;;8530:37;;508:2:5;493:18;8530:37:1;;;;;;;8244:389;;:::o;176:618:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;176:618:0;;;-1:-1:-1;176:618:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:128:5;596:3;627:1;623:6;620:1;617:13;614:39;;;633:18;;:::i;:::-;-1:-1:-1;669:9:5;;556:128::o;689:422::-;778:1;821:5;778:1;835:270;856:7;846:8;843:21;835:270;;;915:4;911:1;907:6;903:17;897:4;894:27;891:53;;;924:18;;:::i;:::-;974:7;964:8;960:22;957:55;;;994:16;;;;957:55;1073:22;;;;1033:15;;;;835:270;;;839:3;689:422;;;;;:::o;1116:131::-;1176:5;1205:36;1232:8;1226:4;1205:36;:::i;:::-;1196:45;1116:131;-1:-1:-1;;;1116:131:5:o;1252:806::-;1301:5;1331:8;1321:80;;-1:-1:-1;1372:1:5;1386:5;;1321:80;1420:4;1410:76;;-1:-1:-1;1457:1:5;1471:5;;1410:76;1502:4;1520:1;1515:59;;;;1588:1;1583:130;;;;1495:218;;1515:59;1545:1;1536:10;;1559:5;;;1583:130;1620:3;1610:8;1607:17;1604:43;;;1627:18;;:::i;:::-;-1:-1:-1;;1683:1:5;1669:16;;1698:5;;1495:218;;1797:2;1787:8;1784:16;1778:3;1772:4;1769:13;1765:36;1759:2;1749:8;1746:16;1741:2;1735:4;1732:12;1728:35;1725:77;1722:159;;;-1:-1:-1;1834:19:5;;;1866:5;;1722:159;1913:34;1938:8;1932:4;1913:34;:::i;:::-;1983:6;1979:1;1975:6;1971:19;1962:7;1959:32;1956:58;;;1994:18;;:::i;:::-;2032:20;;-1:-1:-1;1252:806:5;;;;;:::o;2063:168::-;2103:7;2169:1;2165;2161:6;2157:14;2154:1;2151:21;2146:1;2139:9;2132:17;2128:45;2125:71;;;2176:18;;:::i;:::-;-1:-1:-1;2216:9:5;;2063:168::o;2236:380::-;2315:1;2311:12;;;;2358;;;2379:61;;2433:4;2425:6;2421:17;2411:27;;2379:61;2486:2;2478:6;2475:14;2455:18;2452:38;2449:161;;;2532:10;2527:3;2523:20;2520:1;2513:31;2567:4;2564:1;2557:15;2595:4;2592:1;2585:15;2449:161;;2236:380;;;:::o;2621:127::-;2682:10;2677:3;2673:20;2670:1;2663:31;2713:4;2710:1;2703:15;2737:4;2734:1;2727:15;2621:127;176:618:0;;;;;;",
    "deployedSourceMap": "176:618:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:5;;1606:22;1588:41;;1576:2;1561:18;4171:166:1;1448:187:5;3162:106:1;3249:12;;3162:106;;;5228:25:5;;;5216:2;5201:18;3162:106:1;5082:177:5;4804:478:1;;;;;;:::i;:::-;;:::i;486:50:0:-;;527:9;486:50;;3011:91:1;3093:2;3011:91;;;5436:4:5;5424:17;;;5406:36;;5394:2;5379:18;3011:91:1;5264:184:5;403:36:0;;437:2;403:36;;5677:212:1;;;;;;:::i;:::-;;:::i;3326:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:1;3400:7;3426:18;;;;;;;;;;;;3326:125;2285:102;;;:::i;6376:405::-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;329:38:0:-;;;;;;;;;;;;;;;-1:-1:-1;;;329:38:0;;;;;580:48;;;;;-1:-1:-1;;;;;580:48:0;;;;;;-1:-1:-1;;;;;1404:32:5;;;1386:51;;1374:2;1359:18;580:48:0;1240:203:5;3884:149:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:1;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;245:44:0;;;;;;;;;;;;;;;-1:-1:-1;;;245:44:0;;;;;2074:98:1;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;665:10:4;4293:7:1;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:1;4171:166;;;;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:1;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:4;5030:33:1;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:1;;3658:2:5;5073:79:1;;;3640:21:5;3697:2;3677:18;;;3670:30;3736:34;3716:18;;;3709:62;-1:-1:-1;;;3787:18:5;;;3780:38;3835:19;;5073:79:1;;;;;;;;;5186:57;5195:6;665:10:4;5236:6:1;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:1;;4804:478;-1:-1:-1;;;;4804:478:1:o;5677:212::-;665:10:4;5765:4:1;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:1;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;6376:405::-;665:10:4;6469:4:1;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:1;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:1;;4878:2:5;6556:85:1;;;4860:21:5;4917:2;4897:18;;;4890:30;4956:34;4936:18;;;4929:62;-1:-1:-1;;;5007:18:5;;;5000:35;5052:19;;6556:85:1;4676:401:5;6556:85:1;6675:67;665:10:4;6698:7:1;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:1;;6376:405;-1:-1:-1;;;6376:405:1:o;3654:172::-;3740:4;3756:42;665:10:4;3780:9:1;3791:6;3756:9;:42::i;9952:370::-;-1:-1:-1;;;;;10083:19:1;;10075:68;;;;-1:-1:-1;;;10075:68:1;;4473:2:5;10075:68:1;;;4455:21:5;4512:2;4492:18;;;4485:30;4551:34;4531:18;;;4524:62;-1:-1:-1;;;4602:18:5;;;4595:34;4646:19;;10075:68:1;4271:400:5;10075:68:1;-1:-1:-1;;;;;10161:21:1;;10153:68;;;;-1:-1:-1;;;10153:68:1;;2848:2:5;10153:68:1;;;2830:21:5;2887:2;2867:18;;;2860:30;2926:34;2906:18;;;2899:62;-1:-1:-1;;;2977:18:5;;;2970:32;3019:19;;10153:68:1;2646:398:5;10153:68:1;-1:-1:-1;;;;;10232:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;5228:25:5;;;10283:32:1;;5201:18:5;10283:32:1;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:1;;7382:70;;;;-1:-1:-1;;;7382:70:1;;4067:2:5;7382:70:1;;;4049:21:5;4106:2;4086:18;;;4079:30;4145:34;4125:18;;;4118:62;-1:-1:-1;;;4196:18:5;;;4189:35;4241:19;;7382:70:1;3865:401:5;7382:70:1;-1:-1:-1;;;;;7470:23:1;;7462:71;;;;-1:-1:-1;;;7462:71:1;;2444:2:5;7462:71:1;;;2426:21:5;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:5;;;2566:33;2616:19;;7462:71:1;2242:399:5;7462:71:1;-1:-1:-1;;;;;7626:17:1;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:1;;3251:2:5;7653:74:1;;;3233:21:5;3290:2;3270:18;;;3263:30;3329:34;3309:18;;;3302:62;-1:-1:-1;;;3380:18:5;;;3373:36;3426:19;;7653:74:1;3049:402:5;7653:74:1;-1:-1:-1;;;;;7761:17:1;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:1;7878:6;-1:-1:-1;;;;;7869:35:1;;7897:6;7869:35;;;;5228:25:5;;5216:2;5201:18;;5082:177;7869:35:1;;;;;;;;7372:596;7255:713;;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:5:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:5;2200:15;-1:-1:-1;;2196:29:5;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:5:o;5453:225::-;5493:3;5524:1;5520:6;5517:1;5514:13;5511:136;;;5569:10;5564:3;5560:20;5557:1;5550:31;5604:4;5601:1;5594:15;5632:4;5629:1;5622:15;5511:136;-1:-1:-1;5663:9:5;;5453:225::o;5683:380::-;5762:1;5758:12;;;;5805;;;5826:61;;5880:4;5872:6;5868:17;5858:27;;5826:61;5933:2;5925:6;5922:14;5902:18;5899:38;5896:161;;;5979:10;5974:3;5970:20;5967:1;5960:31;6014:4;6011:1;6004:15;6042:4;6039:1;6032:15;5896:161;;5683:380;;;:::o",
    "sourcePath": "c:/Users/mark146/Documents/hardHat/contracts/UsedMoaToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.7+commit.e28d00a7"
    },
    "ast": {
        "absolutePath": "c:/Users/mark146/Documents/hardHat/contracts/UsedMoaToken.sol",
        "exportedSymbols": {
            "Context": [
                726
            ],
            "DoBuyToken": [
                56
            ],
            "ERC20": [
                602
            ],
            "IERC20": [
                680
            ],
            "IERC20Metadata": [
                705
            ]
        },
        "id": 57,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.4",
                    ".22",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:32:0"
            },
            {
                "absolutePath": "c:/Users/mark146/Documents/hardHat/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "c:/Users/mark146/Documents/hardHat/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 57,
                "sourceUnit": 603,
                "src": "69:103:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 602,
                            "src": "199:5:0"
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "199:5:0"
                    }
                ],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 56,
                "linearizedBaseContracts": [
                    56,
                    602,
                    705,
                    680,
                    726
                ],
                "name": "DoBuyToken",
                "nameLocation": "185:10:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": true,
                        "documentation": {
                            "id": 5,
                            "nodeType": "StructuredDocumentation",
                            "src": "214:25:0",
                            "text": "@notice 토큰 이름"
                        },
                        "functionSelector": "ecd0c0c3",
                        "id": 8,
                        "mutability": "constant",
                        "name": "_token",
                        "nameLocation": "268:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "245:44:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 6,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "245:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": {
                            "hexValue": "446f427579546f6b656e",
                            "id": 7,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "277:12:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91ae3110a33ac7e534583d959a85bd4c3e124d93bbb5564f60f17da2970d553a",
                                "typeString": "literal_string \"DoBuyToken\""
                            },
                            "value": "DoBuyToken"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "documentation": {
                            "id": 9,
                            "nodeType": "StructuredDocumentation",
                            "src": "298:25:0",
                            "text": "@notice 토큰 기호"
                        },
                        "functionSelector": "b09f1266",
                        "id": 12,
                        "mutability": "constant",
                        "name": "_symbol",
                        "nameLocation": "352:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "329:38:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 10,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "329:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": {
                            "hexValue": "444254",
                            "id": 11,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "362:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d981cebe6dbfefebc7fb96efb0f20fd664b34edd915f16c29b7a371ee33c261d",
                                "typeString": "literal_string \"DBT\""
                            },
                            "value": "DBT"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "documentation": {
                            "id": 13,
                            "nodeType": "StructuredDocumentation",
                            "src": "376:21:0",
                            "text": "@notice 십진법"
                        },
                        "functionSelector": "32424aa3",
                        "id": 16,
                        "mutability": "constant",
                        "name": "_decimals",
                        "nameLocation": "425:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "403:36:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 14,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "403:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "value": {
                            "hexValue": "3138",
                            "id": 15,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "437:2:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                            },
                            "value": "18"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "documentation": {
                            "id": 17,
                            "nodeType": "StructuredDocumentation",
                            "src": "448:32:0",
                            "text": "@notice 토큰 발행 개수"
                        },
                        "functionSelector": "2ff2e9dc",
                        "id": 20,
                        "mutability": "constant",
                        "name": "INITIAL_SUPPLY",
                        "nameLocation": "510:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "486:50:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 18,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "486:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "hexValue": "313030303030303030",
                            "id": 19,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "527:9:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                            },
                            "value": "100000000"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "documentation": {
                            "id": 21,
                            "nodeType": "StructuredDocumentation",
                            "src": "549:25:0",
                            "text": "@notice 유저 지갑"
                        },
                        "functionSelector": "c0efbd2a",
                        "id": 28,
                        "mutability": "mutable",
                        "name": "user_wallet",
                        "nameLocation": "595:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "580:48:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 22,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "580:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "value": {
                            "arguments": [
                                {
                                    "expression": {
                                        "id": 25,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "617:3:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                        }
                                    },
                                    "id": 26,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "617:10:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                }
                            ],
                            "expression": {
                                "argumentTypes": [
                                    {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                ],
                                "id": 24,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "609:8:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                },
                                "typeName": {
                                    "id": 23,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "609:8:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "609:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 54,
                            "nodeType": "Block",
                            "src": "678:113:0",
                            "statements": [
                                {
                                    "assignments": [
                                        36
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 36,
                                            "mutability": "mutable",
                                            "name": "owners",
                                            "nameLocation": "697:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 54,
                                            "src": "689:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 35,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "689:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 39,
                                    "initialValue": {
                                        "expression": {
                                            "id": 37,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "706:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "706:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "689:27:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 41,
                                                "name": "owners",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 36,
                                                "src": "733:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 51,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 42,
                                                    "name": "INITIAL_SUPPLY",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 20,
                                                    "src": "741:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 50,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 43,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "758:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "components": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 46,
                                                                            "name": "decimals",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 131,
                                                                            "src": "770:8:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                                "typeString": "function () view returns (uint8)"
                                                                            }
                                                                        },
                                                                        "id": 47,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "770:10:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    ],
                                                                    "id": 45,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "765:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                                        "typeString": "type(uint256)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 44,
                                                                        "name": "uint",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "765:4:0",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 48,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "765:16:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "id": 49,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "764:18:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "758:24:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "741:41:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 40,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 462,
                                            "src": "727:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 52,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "727:56:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 53,
                                    "nodeType": "ExpressionStatement",
                                    "src": "727:56:0"
                                }
                            ]
                        },
                        "id": 55,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "446f427579546f6b656e",
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "657:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_91ae3110a33ac7e534583d959a85bd4c3e124d93bbb5564f60f17da2970d553a",
                                            "typeString": "literal_string \"DoBuyToken\""
                                        },
                                        "value": "DoBuyToken"
                                    },
                                    {
                                        "hexValue": "444254",
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "671:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_d981cebe6dbfefebc7fb96efb0f20fd664b34edd915f16c29b7a371ee33c261d",
                                            "typeString": "literal_string \"DBT\""
                                        },
                                        "value": "DBT"
                                    }
                                ],
                                "id": 33,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 30,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 602,
                                    "src": "651:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "651:26:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 29,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "648:2:0"
                        },
                        "returnParameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "678:0:0"
                        },
                        "scope": 56,
                        "src": "637:154:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 57,
                "src": "176:618:0",
                "usedErrors": []
            }
        ],
        "src": "33:761:0"
    },
    "functionHashes": {
        "INITIAL_SUPPLY()": "2ff2e9dc",
        "_decimals()": "32424aa3",
        "_symbol()": "b09f1266",
        "_token()": "ecd0c0c3",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "user_wallet()": "c0efbd2a"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "494800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "INITIAL_SUPPLY()": "218",
            "_decimals()": "271",
            "_symbol()": "infinite",
            "_token()": "infinite",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24642",
            "balanceOf(address)": "2563",
            "decimals()": "235",
            "decreaseAllowance(address,uint256)": "26955",
            "increaseAllowance(address,uint256)": "27023",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2349",
            "transfer(address,uint256)": "51254",
            "transferFrom(address,address,uint256)": "infinite",
            "user_wallet()": "2381"
        }
    }
}